{"version":3,"sources":["C:/Users/simro/Projects/ngCliApp/src lazy","C:/Users/simro/Projects/ngCliApp/src/app/app.component.css","C:/Users/simro/Projects/ngCliApp/src/app/app.component.html","C:/Users/simro/Projects/ngCliApp/src/app/app.component.ts","C:/Users/simro/Projects/ngCliApp/src/app/app.module.ts","C:/Users/simro/Projects/ngCliApp/src/app/approute.ts","C:/Users/simro/Projects/ngCliApp/src/app/luhnalg/luhnalg.component.css","C:/Users/simro/Projects/ngCliApp/src/app/luhnalg/luhnalg.component.html","C:/Users/simro/Projects/ngCliApp/src/app/luhnalg/luhnalg.component.ts","C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwd.component.css","C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwd.component.html","C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwd.component.ts","C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwddecrypt/passwddecrypt.component.css","C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwddecrypt/passwddecrypt.component.html","C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwddecrypt/passwddecrypt.component.ts","C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwdgen/passwdgen.component.css","C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwdgen/passwdgen.component.html","C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwdgen/passwdgen.component.ts","C:/Users/simro/Projects/ngCliApp/src/app/services/http.comp.ts","C:/Users/simro/Projects/ngCliApp/src/environments/environment.ts","C:/Users/simro/Projects/ngCliApp/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/simro/Projects/ngCliApp/src lazy\n// module id = ../../../../../src lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/simro/Projects/ngCliApp/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{title}}!\\n  </h1>\\n</div>\\nMessage = {{hello}}\\n<button (click)=\\\"onClick()\\\">click</button>\\n\\n<hr/>\\n\\n<div class=\\\"container-fluid\\\">\\n<div class=\\\"col-sm-2\\\">\\n<h1>Menu</h1>\\n<ul class=\\\"nav nav-pills nav-stacked\\\">\\n  <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/passapp\\\">Password App</a></li>\\n  <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/luhnapp\\\">Luhn Algorithim for CC last bit check</a></li>\\n</ul>\\n</div>\\n<div class=\\\"col-sm-10\\\">\\n<h1>Content</h1>\\n\\t<div class=\\\"panel panel-primary\\\">\\n\\t\\t<router-outlet></router-outlet>\\n\\t</div>\\n</div>\\n</div>\\n<!-- <span class=\\\"label label-default\\\">Default</span>\\n<span class=\\\"label label-primary\\\">Primary</span>\\n -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/simro/Projects/ngCliApp/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {Http, Response, RequestOptions, Headers} from '@angular/http';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport {HttpService} from './services/http.comp';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n  hello = 'Hello Default';\n\n  url = '/greeting';\n  constructor(private http: HttpClient, private httpService: HttpService) {}\n\n  //  ngOnInit(): void {\n  //    this.http\n  //      .get(this.url)\n  //      .map(res => {\n  //        return res.json;\n  //      })\n  //      .catch(this.errorHandling)\n  //      .subscribe(result => {\n  //        this.hello = result;\n  //      });\n  ngOnInit(): void {\n    //    const myHeaders = new HttpHeaders().set('Content-Type', 'text/html');\n    //    myHeaders.set('Accept', 'text/plain');\n    //    myHeaders.append('Content-Type', 'application/json');\n    //    const myParams = new URLSearchParams();\n    //    myParams.append('name', 'manveen');\n    //    const options = new RequestOptions({headers: myHeaders, params: myParams});\n    this.http.get(this.url).subscribe(data => {\n      // Read the result field from the JSON response.\n      this.hello = data['content'];\n    });\n  }\n\n  private reqMapping(res: Response): any {\n    console.log('handling request');\n    const body = res.json;\n    return body;\n  }\n\n  private errorHandling(error: Response | any) {\n    console.log('error occured');\n    return Observable.throw('eeerrror');\n  }\n\n  onClickO(): void {\n    console.log('clickingO');\n    this.http\n      .get(this.url)\n      .map(this.reqMapping)\n      .catch(this.errorHandling)\n      .subscribe(result => {\n        this.hello = result;\n      });\n  }\n\n  onClickN(): void {\n    console.log('clickingN');\n    this.httpService\n      .getN(this.url)\n      .subscribe(result => {\n        this.hello = result['content'];\n      });\n  }\n  onClickS(): void {\n    console.log('clicking');\n    this.httpService\n      .getS('/greetingstr')\n      .subscribe(result => {\n        this.hello = result;\n      });\n  }\n\n  onClickP(): void {\n    console.log('clicking');\n    this.httpService\n      .getP('/greeting')\n      .subscribe(result => {\n        this.hello = result['content'];\n      });\n  }\n\n  onClick(): void {\n    console.log('clicking');\n    this.httpService\n      .postN('/postgreeting')\n      .subscribe(result => {\n        this.hello = result['content'];\n        console.log(this.hello);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/simro/Projects/ngCliApp/src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {HttpModule} from '@angular/http';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RouterModule} from '@angular/router';\nimport {FormsModule} from '@angular/forms';\n// import {PasswdModule} from './passwd/passwd.module';\nimport {HashLocationStrategy, Location, LocationStrategy} from '@angular/common';\n\nimport {AppComponent} from './app.component';\nimport {HttpService} from './services/http.comp';\nimport {PasswdComponent} from './passwd/passwd.component';\nimport {LuhnalgComponent} from './luhnalg/luhnalg.component';\nimport {PasswdgenComponent} from './passwd/passwdgen/passwdgen.component';\nimport {PasswddecryptComponent} from './passwd/passwddecrypt/passwddecrypt.component';\nimport {ClipboardModule} from 'ngx-clipboard';\n\n// import {AppRoutingModule} from './app-routing.module';\nimport {Router} from '@angular/router';\nimport {appRoutes} from './approute';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PasswdComponent,\n    LuhnalgComponent,\n    PasswdgenComponent,\n    PasswddecryptComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    HttpClientModule,\n    FormsModule,\n    ClipboardModule,\n    //    PasswdModule,\n    RouterModule.forRoot(\n      appRoutes\n    )\n  ],\n  providers: [HttpService,\n    Location,\n    {provide: LocationStrategy, useClass: HashLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  // Diagnostic only: inspect router configuration\n  constructor(router: Router) {\n    console.log('Routes: ', JSON.stringify(router.config, undefined, 2));\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/simro/Projects/ngCliApp/src/app/app.module.ts","import {RouterModule, Routes} from '@angular/router';\r\nimport {PasswdComponent} from './passwd/passwd.component';\r\nimport {LuhnalgComponent} from './luhnalg/luhnalg.component';\r\nimport {PasswdgenComponent} from './passwd/passwdgen/passwdgen.component';\r\nimport {PasswddecryptComponent} from './passwd/passwddecrypt/passwddecrypt.component';\r\n\r\nexport const appRoutes: Routes = [\r\n  {\r\n    path: 'passapp', component: PasswdComponent,\r\n    //    loadChildren: 'app/passwd/passwd.module#PasswdModule',\r\n    children: [\r\n      {path: 'pgen', component: PasswdgenComponent},\r\n      {path: 'pdec', component: PasswddecryptComponent}\r\n    ]\r\n  },\r\n  {path: 'luhnapp', component: LuhnalgComponent}\r\n];\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/simro/Projects/ngCliApp/src/app/approute.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/simro/Projects/ngCliApp/src/app/luhnalg/luhnalg.component.css\n// module id = ../../../../../src/app/luhnalg/luhnalg.component.css\n// module chunks = main","module.exports = \"<p>\\n  luhnalg works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/simro/Projects/ngCliApp/src/app/luhnalg/luhnalg.component.html\n// module id = ../../../../../src/app/luhnalg/luhnalg.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-luhnalg',\n  templateUrl: './luhnalg.component.html',\n  styleUrls: ['./luhnalg.component.css']\n})\nexport class LuhnalgComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/simro/Projects/ngCliApp/src/app/luhnalg/luhnalg.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwd.component.css\n// module id = ../../../../../src/app/passwd/passwd.component.css\n// module chunks = main","module.exports = \"<div>\\r\\n\\r\\n<div class=\\\"page-header\\\"><h3 align=\\\"center\\\">Password App</h3></div>\\r\\n\\r\\n<ul class=\\\"nav nav-tabs nav-justified\\\">\\r\\n  <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"pgen\\\">Generate Password</a></li>\\r\\n  <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"pdec\\\">Decrypt Password</a></li>\\r\\n</ul>\\r\\n<div>\\r\\n\\t<router-outlet></router-outlet>\\r\\n</div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwd.component.html\n// module id = ../../../../../src/app/passwd/passwd.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-passwd',\n  templateUrl: './passwd.component.html',\n  styleUrls: ['./passwd.component.css']\n})\nexport class PasswdComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {\n  }\n\n}\nexport class PasswdInfo {\n  passwd;\n  salt;\n  generatedPasswd;\n  encryptedPasswd;\n\n  public static getEmptyInstance(): PasswdInfo {\n    const emptyObj: PasswdInfo = {\n      passwd: 'aa',\n      salt: '93066123',\n      generatedPasswd: '',\n      encryptedPasswd: ''\n    };\n    return emptyObj;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwd.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwddecrypt/passwddecrypt.component.css\n// module id = ../../../../../src/app/passwd/passwddecrypt/passwddecrypt.component.css\n// module chunks = main","module.exports = \"<!-- <div>\\n\\t<div class=\\\"input-group\\\">\\n\\t  <span class=\\\"input-group-addon\\\">Vault Password</span>\\n\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"vPasswd\\\" [(ngModel)]=\\\"passwdInfo.passwd\\\">\\n\\t</div>\\n\\t<div class=\\\"input-group\\\">\\n\\t  <span class=\\\"input-group-addon\\\">Salt</span>\\n\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"8 digit\\\" [(ngModel)]=\\\"passwdInfo.salt\\\">\\n\\t  <span class=\\\"input-group-addon\\\">If you don't provide then tool can generate it for you, but you have to remember it when decrypting it</span>\\n\\t</div>\\n\\t<div *ngIf=\\\"!passwdInfo.encryptedPasswd\\\">\\n\\t\\t<button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"submitInput()\\\">Submit to get generated password</button>\\n\\t</div>\\n\\t<h3 *ngIf=\\\"passwdInfo.generatedPasswd\\\"><span class=\\\"label label-default\\\">Genereated Password</span>{{passwdInfo.generatedPasswd}}</h3>\\n\\t<h3 *ngIf=\\\"passwdInfo.encryptedPasswd\\\"><span class=\\\"label label-default\\\">Encrypted Password</span>{{passwdInfo.encryptedPasswd}}</h3>\\n</div> -->\\n\\n\\n<div class=\\\"container-fluid\\\">\\n\\t<div class=\\\"form-group required\\\">\\n\\t  <label>*Vault Password:</label>\\n\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"vPasswd\\\" [(ngModel)]=\\\"passwdInfo.passwd\\\" required>\\n\\t</div>\\n\\t<div class=\\\"form-group\\\">\\n\\t  <label>*Salt:</label>\\n\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"8 digit\\\" [(ngModel)]=\\\"passwdInfo.salt\\\">\\n\\t</div>\\n\\t<div class=\\\"form-group\\\">\\n\\t  <label>*Encrypted Password:</label>\\n\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"8 digit\\\" [(ngModel)]=\\\"passwdInfo.encryptedPasswd\\\">\\n\\t</div>\\n\\t<div class=\\\"form-group\\\" *ngIf=\\\"!passwdInfo.generatedPasswd\\\">\\n\\t\\t<button class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"submitInput()\\\">Submit to get generated password</button>\\n\\t</div>\\n\\t<div class=\\\"input-group form-group\\\" *ngIf=\\\"passwdInfo.generatedPasswd\\\">\\n\\t  <span class=\\\"input-group-addon\\\">Generated Password</span>\\n\\t  <span class=\\\"form-control\\\" >{{passwdInfo.generatedPasswd}}</span>\\n\\t  <span class=\\\"input-group-btn\\\">\\n        <button class=\\\"btn btn-default\\\" [class.btn-success]= \\\"isCopiedE\\\" type=\\\"button\\\" ngxClipboard [cbContent]=\\\"passwdInfo.generatedPasswd\\\" (cbOnSuccess)=\\\"isCopiedE = true\\\">Copy to clipboard</button>\\n      </span>\\n\\t</div>\\n\\t<div class=\\\"form-group\\\" *ngIf=\\\"passwdInfo.generatedPasswd\\\">\\n\\t\\t<button class=\\\"btn btn-warning\\\" type=\\\"button\\\" (click)=\\\"resetInput()\\\">Reset</button>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwddecrypt/passwddecrypt.component.html\n// module id = ../../../../../src/app/passwd/passwddecrypt/passwddecrypt.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {PasswdInfo} from '../passwd.component';\nimport {HttpService} from '../../services/http.comp';\n\n@Component({\n  selector: 'app-passwddecrypt',\n  templateUrl: './passwddecrypt.component.html',\n  styleUrls: ['./passwddecrypt.component.css']\n})\nexport class PasswddecryptComponent implements OnInit {\n\n  constructor(private httpService: HttpService) {}\n\n  isCopiedE: false;\n  passwdInfo: PasswdInfo = {\n    passwd: '',\n    salt: '',\n    generatedPasswd: '',\n    encryptedPasswd: ''\n  };\n\n  submitInput() {\n    console.log('passwdgen http call');\n    this.httpService\n      .postT('/decryptPasswd', this.passwdInfo)\n      .subscribe(result => {\n        this.passwdInfo = result;\n        console.log(this.passwdInfo);\n      });\n  }\n\n  resetInput() {\n    this.passwdInfo = {\n      passwd: '',\n      salt: '',\n      generatedPasswd: '',\n      encryptedPasswd: ''\n    };\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwddecrypt/passwddecrypt.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwdgen/passwdgen.component.css\n// module id = ../../../../../src/app/passwd/passwdgen/passwdgen.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\t<div class=\\\"form-group\\\">\\n\\t  <label>*Vault Password:</label>\\n\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"vPasswd\\\" [(ngModel)]=\\\"passwdInfo.passwd\\\" required>\\n\\t</div>\\n\\t<div class=\\\"form-group\\\">\\n\\t  <label>Salt:</label>\\n\\t  <!-- <div *ngIf=\\\"saltValidation.invalid && (saltValidation.dirty || saltValidation.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t<div *ngIf=\\\"saltValidation.errors.required\\\">\\n    \\t\\tSalt is required.\\n  \\t\\t</div>\\n\\t</div>\\n\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"8 digit\\\"  name=\\\"saltValidation\\\" id=\\\"saltValidation\\\"   [(ngModel)]=\\\"passwdInfo.salt\\\" required #saltValidation=\\\"ngModel\\\"> -->\\n\\t  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"8 digit\\\" [(ngModel)]=\\\"passwdInfo.salt\\\">\\n\\t  <span class=\\\"help-block\\\">If you don't provide then tool can generate it for you, but you have to remember it when decrypting it</span>\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\" *ngIf=\\\"!passwdInfo.encryptedPasswd\\\">\\n\\t\\t<button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"submitInput()\\\">Submit to get generated password</button>\\n\\t</div>\\n\\t\\n\\t<div class=\\\"input-group form-group\\\" *ngIf=\\\"passwdInfo.generatedPasswd\\\">\\n\\t  <span class=\\\"input-group-addon\\\">Generated Password</span>\\n\\t  <span class=\\\"form-control\\\" >{{passwdInfo.generatedPasswd}}</span>\\n\\t  <span class=\\\"input-group-btn\\\">\\n        <button class=\\\"btn btn-default\\\" [class.btn-success]= \\\"isCopiedG\\\" type=\\\"button\\\" ngxClipboard [cbContent]=\\\"passwdInfo.generatedPasswd\\\" (cbOnSuccess)=\\\"isCopiedG = true\\\">Copy to clipboard</button>\\n      </span>\\n\\t</div>\\n\\t\\n\\t<div class=\\\"input-group form-group\\\" *ngIf=\\\"passwdInfo.encryptedPasswd\\\">\\n\\t  <span class=\\\"input-group-addon\\\">Generated Password</span>\\n\\t  <span class=\\\"form-control\\\" >{{passwdInfo.encryptedPasswd}}</span>\\n\\t  <span class=\\\"input-group-btn\\\">\\n        <button class=\\\"btn btn-default\\\" [class.btn-success]= \\\"isCopiedE\\\" type=\\\"button\\\" ngxClipboard [cbContent]=\\\"passwdInfo.encryptedPasswd\\\" (cbOnSuccess)=\\\"isCopiedE = true\\\">Copy to clipboard</button>\\n      </span>\\n\\t</div>\\n\\t\\n\\t<div class=\\\"form-group\\\" *ngIf=\\\"passwdInfo.generatedPasswd\\\">\\n\\t\\t<button class=\\\"btn btn-warning\\\" type=\\\"button\\\" (click)=\\\"resetInput()\\\">Reset</button>\\n\\t</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwdgen/passwdgen.component.html\n// module id = ../../../../../src/app/passwd/passwdgen/passwdgen.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {PasswdInfo} from '../passwd.component';\nimport {HttpService} from '../../services/http.comp';\n\n@Component({\n  selector: 'app-passwdgen',\n  templateUrl: './passwdgen.component.html',\n  styleUrls: ['./passwdgen.component.css']\n})\nexport class PasswdgenComponent implements OnInit {\n\n  constructor(private httpService: HttpService) {}\n\n  isCopiedG = false;\n  isCopiedE = false;\n  passwdInfo: PasswdInfo = PasswdInfo.getEmptyInstance(); // empty object must exist as passwd need to be assigned a value, if passwdInfo doesn't exist then passwd can't be assigned\n\n  submitInput() {\n    this.httpService\n      .postT('/generatePasswd', this.passwdInfo)\n      .subscribe(result => {\n        this.passwdInfo = result;\n        console.log(this.passwdInfo);\n      });\n  }\n\n  resetInput() {\n    this.passwdInfo = { // TODO change it to PasswdInfo.getEmptyInstance();\n      passwd: '',\n      salt: '',\n      generatedPasswd: '',\n      encryptedPasswd: ''\n    };\n  }\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/simro/Projects/ngCliApp/src/app/passwd/passwdgen/passwdgen.component.ts","/**\r\n * New typescript file\r\n */\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {HttpClient, HttpParams, HttpRequest, HttpEventType, HttpResponse, HttpHeaders} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {PasswdInfo} from '../passwd/passwd.component';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  public getN(url: string): Observable<any> {\r\n    return this.httpClient.get(url);\r\n  }\r\n  public getS(url: string): Observable<any> {\r\n    return this.httpClient.get(url, {responseType: 'text'});\r\n  }\r\n  public getP(url: string): Observable<any> {\r\n    const params = new HttpParams().set('name', 'manveen');\r\n    const options = {params: params};\r\n    return this.httpClient.get(url, options); // this also works return this.httpClient.get(url, {params: params});\r\n  }\r\n\r\n  public postN(url: string): Observable<any> { // Observable<number>\r\n    //    const subject = new Subject<number>();\r\n    const body = {content: 'Brad', id: 1};\r\n    const params = new HttpParams().set('name', 'manveen');\r\n    //    const req = new HttpRequest('POST', url, body, {\r\n    //      params: params,\r\n    //      reportProgress: true,\r\n    //    });\r\n\r\n    //    this.httpClient.request(req).subscribe(event => {\r\n    //      if (event.type === HttpEventType.UploadProgress) {\r\n    //        const percentDone = Math.round(100 * event.loaded / event.total);\r\n    //        subject.next(percentDone);\r\n    //      } else if (event instanceof HttpResponse) {\r\n    //        subject.complete();\r\n    //      }\r\n    //    });\r\n    //    return subject.asObservable();\r\n    //    return this.httpClient.request(req);\r\n    return this.httpClient.post(url, body, {params: params});\r\n  }\r\n\r\n  public postT(url: string, passwdInfo: PasswdInfo): Observable<any> { // Observable<number>\r\n    return this.httpClient.post(url, passwdInfo);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/simro/Projects/ngCliApp/src/app/services/http.comp.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/simro/Projects/ngCliApp/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/simro/Projects/ngCliApp/src/main.ts"],"sourceRoot":"webpack:///"}